apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "lubelog.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "lubelog.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "lubelog.fullname" . }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- if .Values.updateStrategy }}
  {{- with .Values.updateStrategy }}
  updateStrategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "lubelog.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "lubelog.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "lubelog.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: config-ro
          secret:
            secretName: {{ include "lubelog.fullname" . }}
            items:
              - key: userConfig
                path: userConfig.json
        - name: translations
          emptyDir: {}
        - name: config
          emptyDir: {}
      {{- if .Values.config.translations }}
      initContainers:
        - name: init-translations
          image: "{{ .Values.curl.image.repository }}:{{ .Values.curl.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.curl.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              mkdir -p /config
              cp /config-ro/* /config
              mkdir -p /translations
              {{- range .Values.config.translations }}
              echo "Fetching {{ . }}"
              curl -o "/translations/$(basename {{ . }})" "{{ . }}"
              {{- end }}
          volumeMounts:
            - name: config-ro
              mountPath: /config-ro
            - name: config
              mountPath: /config
            - name: translations
              mountPath: /translations
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /App/config
            - name: translations
              mountPath: /App/wwwroot/translations
          {{- if .Values.persistence.data.enabled }}
            - name: {{ include "lubelog.pvcData" . }}
              mountPath: /App/data
          {{- end }}
          {{- if .Values.persistence.documents.enabled }}
            - name: {{ include "lubelog.pvcDocuments" . }}
              mountPath: /App/wwwroot/documents
          {{- end }}
          {{- if .Values.persistence.images.enabled }}
            - name: {{ include "lubelog.pvcImages" . }}
              mountPath: /App/wwwroot/images
          {{- end }}
          env:
            - name: "LC_ALL"
              value: {{ .Values.config.LC_ALL | default "en_US.UTF-8" | quote }}
            - name: "LANG"
              value: {{ .Values.config.LANG | default "en_US.UTF-8" | quote }}
            - name: "LOGGING__LOGLEVEL__DEFAULT"
              value: {{ .Values.config.LOGLEVEL | default "Information" | quote }}
            - name: MailConfig__EmailServer
              valueFrom:
                secretKeyRef:
                  name: {{ include "lubelog.mailSecret" . }}
                  key: MailConfig__EmailServer
            - name: MailConfig__EmailFrom
              valueFrom:
                secretKeyRef:
                  name: {{ include "lubelog.mailSecret" . }}
                  key: MailConfig__EmailFrom
            - name: MailConfig__Port
              valueFrom:
                secretKeyRef:
                  name: {{ include "lubelog.mailSecret" . }}
                  key: MailConfig__Port
            - name: MailConfig__Username
              valueFrom:
                secretKeyRef:
                  name: {{ include "lubelog.mailSecret" . }}
                  key: MailConfig__Username
            - name: MailConfig__Password
              valueFrom:
                secretKeyRef:
                  name: {{ include "lubelog.mailSecret" . }}
                  key: MailConfig__Password
            {{- if or .Values.postgres.connect .Values.postgres.create }}
            - name: POSTGRES_CONNECTION
              valueFrom:
                secretKeyRef:
                  name: {{ include "lubelog.postgresSecret" . }}
                  key: POSTGRES_CONNECTION
            {{- end }}
          {{- if .Values.oidc.enabled }}
          envFrom:
            - secretRef:
                name: {{ include "lubelog.oidcSecret" . }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "lubelog.pvcData" . }}
        labels:
          {{- include "lubelog.labels" . | nindent 10 }}
        annotations:
          helm.sh/resource-policy: "keep"
        {{- if .Values.persistence.data.annotations }}
          {{- toYaml .Values.persistence.data.annotations | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.persistence.data.accessMode }}
        resources:
          requests:
            storage: {{ .Values.persistence.data.size }}
        {{- if .Values.persistence.data.storageClass }}
        storageClassName: {{ .Values.persistence.data.storageClass }}
        {{- end }}
    - metadata:
        name: {{ include "lubelog.pvcDocuments" . }}
        labels:
          {{- include "lubelog.labels" . | nindent 10 }}
        annotations:
          helm.sh/resource-policy: "keep"
        {{- if .Values.persistence.documents.annotations }}
          {{- toYaml .Values.persistence.documents.annotations | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.persistence.documents.accessMode }}
        resources:
          requests:
            storage: {{ .Values.persistence.documents.size }}
        {{- if .Values.persistence.documents.storageClass }}
        storageClassName: {{ .Values.persistence.documents.storageClass }}
        {{- end }}
    - metadata:
        name: {{ include "lubelog.pvcImages" . }}
        labels:
          {{- include "lubelog.labels" . | nindent 10 }}
        annotations:
          helm.sh/resource-policy: "keep"
        {{- if .Values.persistence.images.annotations }}
          {{- toYaml .Values.persistence.images.annotations | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.persistence.images.accessMode }}
        resources:
          requests:
            storage: {{ .Values.persistence.images.size }}
        {{- if .Values.persistence.images.storageClass }}
        storageClassName: {{ .Values.persistence.images.storageClass }}
        {{- end }}
