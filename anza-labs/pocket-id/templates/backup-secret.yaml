{{- if .Values.backup.enabled -}}
{{- if .Values.backup.secret.create -}}
{{- $provider := .Values.database.provider }}
{{- if not (eq $provider "sqlite") }}
  {{- fail (printf "Invalid database: %s. .Values.database.provider must be 'sqlite' when backup is enabled." $provider) }}
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "pocket-id.backupSecret" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "pocket-id.labels" . | nindent 4 }}
    {{- with .Values.podLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
stringData:
  ACCESS_KEY: "{{ .Values.backup.secret.accessKey }}"
  SECRET_KEY: "{{ .Values.backup.secret.secretKey }}"
  {{- range $i, $val := .Values.backup.secret.replicas }}
  {{ printf "REPLICA_%d_TYPE" $i }}: "s3"
  {{ printf "REPLICA_%d_PATH" $i }}: "{{ $val.path }}"
  {{ printf "REPLICA_%d_ACCESS_KEY" $i }}: "{{ $val.accessKey }}"
  {{ printf "REPLICA_%d_SECRET_KEY" $i }}: "{{ $val.secretKey }}"
  {{ printf "REPLICA_%d_REGION" $i }}: "{{ $val.region }}"
  {{ printf "REPLICA_%d_BUCKET" $i }}: "{{ $val.bucket }}"
  {{ printf "REPLICA_%d_ENDPOINT" $i }}: "{{ $val.endpoint }}"
  {{ printf "REPLICA_%d_FORCE_PATH_STYLE" $i }}: "{{ $val.forcePathStyle }}"
  {{ printf "REPLICA_%d_SKIP_VERIFY" $i }}: "{{ $val.skipVerify }}"
  {{- end }}
{{- end }}
{{- end }}
