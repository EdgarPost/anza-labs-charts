{{- if .Values.config.create -}}
{{- $dbConnection := .Values.database.connectionString | required ".Values.database.connectionString is required." -}}
{{- $provider := .Values.database.provider | default "sqlite" }}
{{- $dbConnection := .Values.database.connectionString | required ".Values.database.connectionString is required." }}
{{- if eq $provider "postgres" }}
  {{- if not (hasPrefix $dbConnection "postgres://") }}
    {{- fail (printf "Invalid database connectionString: %s. .Values.database.connectionString must start with 'postgres://' when .Values.database.provider is 'postgres'." $dbConnection) }}
  {{- end }}
{{- else if eq $provider "sqlite" }}
  {{- if not (hasPrefix $dbConnection "file:") }}
    {{- fail (printf "Invalid database connectionString: %s. .Values.database.connectionString must start with 'file:' when .Values.database.provider is 'sqlite'." $dbConnection) }}
  {{- end }}
{{- else }}
  {{- fail (printf "Invalid database provider: %s. .Values.database.provider must be 'sqlite' or 'postgres'." $provider) }}
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "pocket-id.secret" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "pocket-id.labels" . | nindent 4 }}
    {{- with .Values.podLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
stringData:
  {{- if .Values.maxmindLicenseKey }}
  MAXMIND_LICENSE_KEY: "{{ .Values.maxmindLicenseKey }}"
  {{- end }}
  DB_CONNECTION_STRING: "{{ $dbConnection }}"
{{- end }}
