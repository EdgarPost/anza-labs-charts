apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "hosted-control-plane.fullname" . }}-installer-{{ .Release.Revision }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "hosted-control-plane.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      {{- with .Values.kubeControllerManager.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hosted-control-plane.labels" . | nindent 8 }}
        {{- include "hosted-control-plane.controller-manager.labels" . | nindent 8 }}
        {{- with .Values.kubeControllerManager.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      restartPolicy: Never
      serviceAccountName: {{ include "hosted-control-plane.fullname" . }}-installer
      automountServiceAccountToken: true
      containers:
        - name: installer
          command:
            - /usr/bin/bash
          args:
            - /etc/installer/install.sh
          securityContext:
            {{- toYaml .Values.konnectivity.installer.securityContext | nindent 12 }}
          image: "{{ .Values.konnectivity.installer.image.repository }}:{{ .Values.konnectivity.installer.image.tag }}"
          imagePullPolicy: {{ .Values.konnectivity.installer.image.pullPolicy }}
          env:
            - name: TARGET_KUBECONFIG
              value: /etc/kubernetes/value
            - name: API_SERVER
              value: {{ include "hosted-control-plane.fullname" . }}-apiserver
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: MANIFESTS
              value: /etc/installer/manifests.yaml
            - name: KONNECTIVITY_AGENT
              value: "{{ .Values.konnectivity.agent.image.repository }}:{{ .Values.konnectivity.agent.image.tag }}"
            - name: KONNECTIVITY_AGENT_PULL_POLICY
              value: {{ .Values.konnectivity.agent.image.pullPolicy }}
            - name: VERBOSITY
              value: {{ .Values.konnectivity.agent.verbosity | quote }}
          volumeMounts:
            - name: kubeconfig
              readOnly: true
              mountPath: /etc/kubernetes
            - name: installer
              readOnly: true
              mountPath: /etc/installer
          resources:
            {{- toYaml .Values.konnectivity.installer.resources | nindent 12 }}
      volumes:
        - name: kubeconfig
          secret:
            secretName: {{ include "hosted-control-plane.fullname" . }}-installer-kubeconfig
            defaultMode: 420
        - name: installer
          configMap:
            name: {{ include "hosted-control-plane.fullname" . }}-installer-{{ .Release.Revision }}
      {{- with .Values.konnectivity.installer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.konnectivity.installer.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.konnectivity.installer.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  backoffLimit: 3
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "hosted-control-plane.fullname" . }}-installer-kubeconfig-{{ .Release.Revision }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "hosted-control-plane.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      {{- with .Values.kubeControllerManager.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hosted-control-plane.labels" . | nindent 8 }}
        {{- include "hosted-control-plane.controller-manager.labels" . | nindent 8 }}
        {{- with .Values.kubeControllerManager.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      restartPolicy: Never
      serviceAccountName: {{ include "hosted-control-plane.fullname" . }}-generator
      automountServiceAccountToken: true
      containers:
        - name: generator
          command:
            - /usr/bin/bash
          args:
            - /etc/generator/generate.sh
          securityContext:
            {{- toYaml .Values.generator.securityContext | nindent 12 }}
          image: "{{ .Values.generator.image.repository }}:{{ .Values.generator.image.tag }}"
          imagePullPolicy: {{ .Values.generator.image.pullPolicy }}
          env:
            - name: NEW_KUBECONFIG
              value: /tmp/kubeconfig
            - name: CLUSTER_NAME
              value: {{ include "hosted-control-plane.fullname" . }}
            - name: COMPONENT
              value: "-installer"
            - name: KUBERNETES_ENDPOINT
              value: "https://{{ include "hosted-control-plane.fullname" . }}-apiserver.{{ .Release.Namespace }}.svc.cluster.local:6443"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
          volumeMounts:
            - name: pki
              readOnly: true
              mountPath: /etc/pki/kubernetes
            - name: generator
              readOnly: true
              mountPath: /etc/generator
          resources:
            {{- toYaml .Values.generator.resources | nindent 12 }}
      volumes:
        - name: pki
          secret:
            secretName: {{ include "hosted-control-plane.fullname" . }}-installer-cert
            defaultMode: 420
        - name: generator
          configMap:
            name: {{ include "hosted-control-plane.fullname" . }}
      {{- with .Values.generator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.generator.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.generator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  backoffLimit: 3
